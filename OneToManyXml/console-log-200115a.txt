JRE Oracle Corporation/13.0.1 is not supported, advanced source lookup disabled.
Saving data...
18:16:15,781 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
18:16:15,782 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
18:16:15,782 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/D:/paul/proj/HelloHibernate/OneToManyXml/target/classes/logback.xml]
18:16:15,850 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
18:16:15,856 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
18:16:15,859 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
18:16:15,943 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]
18:16:15,945 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [FILE]
18:16:15,960 |-INFO in ch.qos.logback.core.rolling.FixedWindowRollingPolicy@5136d012 - Will use zip compression
18:16:15,966 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active log file name: c:/mkyongapp.log
18:16:15,966 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is set to [c:/mkyongapp.log]
18:16:15,968 |-ERROR in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - openFile(c:/mkyongapp.log,true) call failed. java.io.FileNotFoundException: c:\mkyongapp.log (Access is denied)
	at java.io.FileNotFoundException: c:\mkyongapp.log (Access is denied)
	at 	at java.base/java.io.FileOutputStream.open0(Native Method)
	at 	at java.base/java.io.FileOutputStream.open(FileOutputStream.java:292)
	at 	at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
	at 	at ch.qos.logback.core.recovery.ResilientFileOutputStream.<init>(ResilientFileOutputStream.java:30)
	at 	at ch.qos.logback.core.FileAppender.openFile(FileAppender.java:163)
	at 	at ch.qos.logback.core.FileAppender.start(FileAppender.java:115)
	at 	at ch.qos.logback.core.rolling.RollingFileAppender.start(RollingFileAppender.java:79)
	at 	at ch.qos.logback.core.joran.action.AppenderAction.end(AppenderAction.java:96)
	at 	at ch.qos.logback.core.joran.spi.Interpreter.callEndAction(Interpreter.java:315)
	at 	at ch.qos.logback.core.joran.spi.Interpreter.endElement(Interpreter.java:194)
	at 	at ch.qos.logback.core.joran.spi.Interpreter.endElement(Interpreter.java:180)
	at 	at ch.qos.logback.core.joran.spi.EventPlayer.play(EventPlayer.java:52)
	at 	at ch.qos.logback.core.joran.spi.Interpreter.play(Interpreter.java:332)
	at 	at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:126)
	at 	at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:93)
	at 	at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:52)
	at 	at ch.qos.logback.classic.util.ContextInitializer.configureByResource(ContextInitializer.java:77)
	at 	at ch.qos.logback.classic.util.ContextInitializer.autoConfig(ContextInitializer.java:150)
	at 	at org.slf4j.impl.StaticLoggerBinder.init(StaticLoggerBinder.java:85)
	at 	at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:55)
	at 	at org.slf4j.LoggerFactory.bind(LoggerFactory.java:121)
	at 	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:111)
	at 	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:268)
	at 	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:241)
	at 	at org.jboss.logging.Slf4jLoggerProvider.getLogger(Slf4jLoggerProvider.java:31)
	at 	at org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:156)
	at 	at org.jboss.logging.LoggerProviders.trySlf4j(LoggerProviders.java:118)
	at 	at org.jboss.logging.LoggerProviders.findProvider(LoggerProviders.java:103)
	at 	at org.jboss.logging.LoggerProviders.find(LoggerProviders.java:34)
	at 	at org.jboss.logging.LoggerProviders.<clinit>(LoggerProviders.java:31)
	at 	at org.jboss.logging.Logger.getLogger(Logger.java:2465)
	at 	at org.jboss.logging.Logger$1.run(Logger.java:2565)
	at 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at 	at org.jboss.logging.Logger.getMessageLogger(Logger.java:2529)
	at 	at org.jboss.logging.Logger.getMessageLogger(Logger.java:2516)
	at 	at org.hibernate.internal.CoreLogging.messageLogger(CoreLogging.java:28)
	at 	at org.hibernate.internal.CoreLogging.messageLogger(CoreLogging.java:24)
	at 	at org.hibernate.cfg.Configuration.<clinit>(Configuration.java:85)
	at 	at com.mkyong.util.HibernateUtil.buildSessionFactory(HibernateUtil.java:13)
	at 	at com.mkyong.util.HibernateUtil.<clinit>(HibernateUtil.java:8)
	at 	at com.mkyong.App.saveStock(App.java:22)
	at 	at com.mkyong.App.main(App.java:74)
18:16:15,968 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.type] to WARN
18:16:15,968 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate] to WARN
18:16:15,968 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO
18:16:15,968 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]

2020-01-15_18:16:16.549 WARN  org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-01-15_18:16:17.010 WARN  org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-01-15_18:16:17.042 WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
Hibernate: 
    insert 
    into
        stock
        (STOCK_ID, STOCK_CODE, STOCK_NAME) 
    values
        (default, ?, ?)
Hibernate: 
    
values
    identity_val_local()
Hibernate: 
    insert 
    into
        stock_daily_record
        (RECORD_ID, STOCK_ID, PRICE_OPEN, PRICE_CLOSE, PRICE_CHANGE, VOLUME, DATE) 
    values
        (default, ?, ?, ?, ?, ?, ?)
Hibernate: 
    
values
    identity_val_local()
Hibernate: 
    insert 
    into
        stock
        (STOCK_ID, STOCK_CODE, STOCK_NAME) 
    values
        (default, ?, ?)
Hibernate: 
    
values
    identity_val_local()
Hibernate: 
    insert 
    into
        stock_daily_record
        (RECORD_ID, STOCK_ID, PRICE_OPEN, PRICE_CLOSE, PRICE_CHANGE, VOLUME, DATE) 
    values
        (default, ?, ?, ?, ?, ?, ?)
Hibernate: 
    
values
    identity_val_local()
Reading data...
Hibernate: 
    select
        stock0_.STOCK_ID as STOCK_ID1_0_,
        stock0_.STOCK_CODE as STOCK_CO2_0_,
        stock0_.STOCK_NAME as STOCK_NA3_0_ 
    from
        stock stock0_
Hibernate: 
    select
        stockdaily0_.STOCK_ID as STOCK_ID2_1_0_,
        stockdaily0_.RECORD_ID as RECORD_I1_1_0_,
        stockdaily0_.RECORD_ID as RECORD_I1_1_1_,
        stockdaily0_.STOCK_ID as STOCK_ID2_1_1_,
        stockdaily0_.PRICE_OPEN as PRICE_OP3_1_1_,
        stockdaily0_.PRICE_CLOSE as PRICE_CL4_1_1_,
        stockdaily0_.PRICE_CHANGE as PRICE_CH5_1_1_,
        stockdaily0_.VOLUME as VOLUME6_1_1_,
        stockdaily0_.DATE as DATE7_1_1_ 
    from
        stock_daily_record stockdaily0_ 
    where
        stockdaily0_.STOCK_ID=?
Inside getStocks(), #/stocks=2
Stock code: 7052, name: PADINI
  Open: 1.2, close: 1.1, volume: 3000000
Stock code: 888, name: MSFT
Hibernate: 
    select
        stockdaily0_.STOCK_ID as STOCK_ID2_1_0_,
        stockdaily0_.RECORD_ID as RECORD_I1_1_0_,
        stockdaily0_.RECORD_ID as RECORD_I1_1_1_,
        stockdaily0_.STOCK_ID as STOCK_ID2_1_1_,
        stockdaily0_.PRICE_OPEN as PRICE_OP3_1_1_,
        stockdaily0_.PRICE_CLOSE as PRICE_CL4_1_1_,
        stockdaily0_.PRICE_CHANGE as PRICE_CH5_1_1_,
        stockdaily0_.VOLUME as VOLUME6_1_1_,
        stockdaily0_.DATE as DATE7_1_1_ 
    from
        stock_daily_record stockdaily0_ 
    where
        stockdaily0_.STOCK_ID=?
  Open: 162.62, close: 163.18, volume: 5000000
Back in main(), #/stocks=2
Stock code: 7052, name: PADINI
  Open: 1.2, close: 1.1, volume: 3000000
Stock code: 888, name: MSFT
  Open: 162.62, close: 163.18, volume: 5000000
Done
